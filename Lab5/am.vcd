$date
	Thu Sep 27 16:44:33 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arith_machine_test $end
$var wire 1 ! except $end
$var reg 1 " clock $end
$var reg 1 # done $end
$var reg 1 $ reset $end
$var integer 32 % i [31:0] $end
$scope module am $end
$var wire 1 " clock $end
$var wire 1 $ reset $end
$var wire 32 & rtData [31:0] $end
$var wire 32 ' rsData [31:0] $end
$var wire 1 ( rd_src $end
$var wire 1 ) rdWriteEnable $end
$var wire 5 * rdNum [4:0] $end
$var wire 32 + rdData [31:0] $end
$var wire 32 , nextPC [31:0] $end
$var wire 32 - inst [31:0] $end
$var wire 32 . imm32 [31:0] $end
$var wire 1 ! except $end
$var wire 1 / alu_src2 $end
$var wire 3 0 alu_op [2:0] $end
$var wire 32 1 PC [31:0] $end
$var wire 32 2 B [31:0] $end
$scope module PC_reg $end
$var wire 1 " clock $end
$var wire 1 3 enable $end
$var wire 1 $ reset $end
$var wire 32 4 d [31:0] $end
$var reg 32 5 q [31:0] $end
$upscope $end
$scope module al1 $end
$var wire 1 6 negative $end
$var wire 32 7 out [31:0] $end
$var wire 1 8 overflow $end
$var wire 1 9 zero $end
$var wire 32 : inB [31:0] $end
$var wire 32 ; inA [31:0] $end
$var wire 3 < control [2:0] $end
$upscope $end
$scope module al2 $end
$var wire 3 = control [2:0] $end
$var wire 32 > inA [31:0] $end
$var wire 32 ? inB [31:0] $end
$var wire 1 @ negative $end
$var wire 32 A out [31:0] $end
$var wire 1 B overflow $end
$var wire 1 C zero $end
$upscope $end
$scope module im $end
$var wire 30 D addr [29:0] $end
$var wire 32 E data [31:0] $end
$var reg 32 F i [31:0] $end
$upscope $end
$scope module md1 $end
$var wire 1 G add_ $end
$var wire 1 / alu_src2 $end
$var wire 1 H and_ $end
$var wire 1 ! except $end
$var wire 6 I funct [5:0] $end
$var wire 1 J nor_ $end
$var wire 6 K opcode [5:0] $end
$var wire 1 L or_ $end
$var wire 1 ( rd_src $end
$var wire 1 M sub_ $end
$var wire 1 ) writeenable $end
$var wire 1 N xor_ $end
$var wire 1 O xori_ $end
$var wire 1 P ori_ $end
$var wire 1 Q andi_ $end
$var wire 3 R alu_op [2:0] $end
$var wire 1 S addi_ $end
$upscope $end
$scope module mx1 $end
$var wire 32 T A [31:0] $end
$var wire 32 U B [31:0] $end
$var wire 32 V out [31:0] $end
$var wire 1 ( sel $end
$var wire 32 W temp1 [31:0] $end
$var wire 32 X temp2 [31:0] $end
$upscope $end
$scope module mx2 $end
$var wire 32 Y B [31:0] $end
$var wire 32 Z out [31:0] $end
$var wire 1 / sel $end
$var wire 32 [ temp1 [31:0] $end
$var wire 32 \ temp2 [31:0] $end
$var wire 32 ] A [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 " clock $end
$var wire 32 ^ rdData [31:0] $end
$var wire 5 _ rdNum [4:0] $end
$var wire 1 ) rdWriteEnable $end
$var wire 1 $ reset $end
$var wire 32 ` rsData [31:0] $end
$var wire 5 a rsNum [4:0] $end
$var wire 32 b rtData [31:0] $end
$var wire 5 c rtNum [4:0] $end
$var integer 32 d i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 e \r[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 f \r[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 g \r[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 h \r[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 i \r[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 j \r[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 k \r[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 l \r[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 m \r[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 n \r[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 o \r[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 p \r[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 q \r[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 r \r[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 s \r[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 t \r[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 u \r[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 v \r[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 w \r[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 x \r[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 y \r[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 z \r[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 { \r[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 | \r[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 } \r[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ~ \r[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 !" \r[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 "" \r[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 #" \r[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 $" \r[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 %" \r[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 &" \r[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b100000 d
b110 c
b0 b
b0 a
b0 `
b110 _
b1100100 ^
b0 ]
b1100100 \
b0 [
b1100100 Z
b1100100 Y
b110 X
b0 W
b110 V
b110 U
b0 T
1S
b10 R
0Q
0P
0O
0N
0M
0L
b1000 K
0J
b100100 I
0H
0G
b100000000 F
b100000000001100000000001100100 E
b0 D
0C
0B
b100 A
0@
b100 ?
b0 >
b10 =
b10 <
b0 ;
b1100100 :
09
08
b1100100 7
06
b0 5
b100 4
13
b1100100 2
b0 1
b10 0
1/
b1100100 .
b100000000001100000000001100100 -
b100 ,
b1100100 +
b110 *
1)
1(
b0 '
b0 &
b100000 %
1$
0#
0"
0!
$end
#3
0$
#5
b111 *
b111 _
b11111111 +
b11111111 7
b11111111 ^
b111 V
b10011011 2
b10011011 :
b10011011 Z
b111 X
b10011011 \
b1000 ,
b1000 4
b1000 A
b11011 I
b111 U
b111 c
b1100100 '
b1100100 ;
b1100100 `
b110 a
b10011011 .
b10011011 Y
b100000110001110000000010011011 -
b100000110001110000000010011011 E
b1 D
b100 1
b100 5
b100 >
b1100100 k
b0 &
b0 ]
b0 b
1"
#10
0"
#15
09
0!
b11001000 +
b11001000 7
b11001000 ^
1)
b1100100 [
b1000 W
0/
0(
b1000 *
b1000 _
b10 0
b10 <
b10 R
b1000 V
b1100100 2
b1100100 :
b1100100 Z
1G
b0 X
b0 \
b1100 ,
b1100 4
b1100 A
b100000 I
0S
b0 K
b110 U
b1000 T
b110 c
b100000000100000 .
b100000000100000 Y
b110001100100000000100000 -
b110001100100000000100000 E
b10 D
b11111111 l
b1100100 &
b1100100 ]
b1100100 b
b1000 1
b1000 5
b1000 >
1"
#20
0"
#25
b11 0
b11 <
b11 R
b1001 *
b1001 _
b110111 +
b110111 7
b110111 ^
b1001 V
b11001000 2
b11001000 :
b11001000 Z
0G
1M
b1001 W
b11001000 [
b10000 ,
b10000 4
b10000 A
b100010 I
b1000 U
b1001 T
b11001000 &
b11001000 ]
b11001000 b
b1000 c
b11111111 '
b11111111 ;
b11111111 `
b111 a
b100100000100010 .
b100100000100010 Y
b111010000100100000100010 -
b111010000100100000100010 E
b11 D
b1100 1
b1100 5
b1100 >
b11001000 m
1"
#30
0"
#35
16
09
b1010 *
b1010 _
b1010 V
b11111111 2
b11111111 :
b11111111 Z
b11111111111111111111111111001001 +
b11111111111111111111111111001001 7
b11111111111111111111111111001001 ^
b1010 W
b11111111 [
b10100 ,
b10100 4
b10100 A
b111 U
b1010 T
b11111111 &
b11111111 ]
b11111111 b
b111 c
b11001000 '
b11001000 ;
b11001000 `
b1000 a
b101000000100010 .
b101000000100010 Y
b1000001110101000000100010 -
b1000001110101000000100010 E
b100 D
b110111 n
b10000 1
b10000 5
b10000 >
1"
#40
0"
#45
0!
1)
06
b10 0
b10 <
b10 R
b100101100 +
b100101100 7
b100101100 ^
b1011 *
b1011 _
b1011 V
b1100100 2
b1100100 :
b1100100 Z
1G
0M
b1011 W
b1100100 [
b11000 ,
b11000 4
b11000 A
b100000 I
b110 U
b1011 T
b1100100 &
b1100100 ]
b1100100 b
b110 c
b101100000100000 .
b101100000100000 Y
b1000001100101100000100000 -
b1000001100101100000100000 E
b101 D
b10100 1
b10100 5
b10100 >
b11111111111111111111111111001001 o
1"
#50
0"
#55
09
b100 0
b100 <
b100 R
b1100 *
b1100 _
b101100 +
b101100 7
b101100 ^
b1100 V
b11111111 2
b11111111 :
b11111111 Z
0G
1H
b1100 W
b11111111 [
b11100 ,
b11100 4
b11100 A
b100100 I
b111 U
b1100 T
b11111111 &
b11111111 ]
b11111111 b
b111 c
b100101100 '
b100101100 ;
b100101100 `
b1011 a
b110000000100100 .
b110000000100100 Y
b1011001110110000000100100 -
b1011001110110000000100100 E
b110 D
b100101100 p
b11000 1
b11000 5
b11000 >
1"
#60
0"
#65
16
b11111111111111111111111111111111 +
b11111111111111111111111111111111 7
b11111111111111111111111111111111 ^
b101 0
b101 <
b101 R
b1101 *
b1101 _
b1101 V
0H
1L
b1101 W
b100000 ,
b100000 4
b100000 A
b100101 I
b1101 T
b11111111111111111111111111001001 '
b11111111111111111111111111001001 ;
b11111111111111111111111111001001 `
b1010 a
b110100000100101 .
b110100000100101 Y
b1010001110110100000100101 -
b1010001110110100000100101 E
b111 D
b11100 1
b11100 5
b11100 >
b101100 q
1"
#70
0"
#75
09
06
b101010110101010 +
b101010110101010 7
b101010110101010 ^
b1110 *
b1110 _
b101010101010101 \
b1110 X
b1110 V
b101010101010101 2
b101010101010101 :
b101010101010101 Z
0L
1/
1(
b111 0
b111 <
b111 R
b0 W
b0 [
b100100 ,
b100100 4
b100100 A
b10101 I
1O
b1110 K
b1110 U
b1010 T
b0 &
b0 ]
b0 b
b1110 c
b11111111 '
b11111111 ;
b11111111 `
b111 a
b101010101010101 .
b101010101010101 Y
b111000111011100101010101010101 -
b111000111011100101010101010101 E
b1000 D
b11111111111111111111111111111111 r
b100000 1
b100000 5
b100000 >
1"
#80
0"
#85
09
b100000000 +
b100000000 7
b100000000 ^
b1111 *
b1111 _
0!
b11111111111111111111111111111111 [
b1111 W
b1111 V
b11111111111111111111111111111111 2
b11111111111111111111111111111111 :
b11111111111111111111111111111111 Z
1M
1)
0/
0(
b11 0
b11 <
b11 R
b0 X
b0 \
b101000 ,
b101000 4
b101000 A
b100010 I
0O
b0 K
b1101 U
b1111 T
b1101 c
b111100000100010 .
b111100000100010 Y
b111011010111100000100010 -
b111011010111100000100010 E
b1001 D
b100100 1
b100100 5
b100100 >
b101010110101010 s
b11111111111111111111111111111111 &
b11111111111111111111111111111111 ]
b11111111111111111111111111111111 b
1"
#90
0"
#95
0!
1)
b10 0
b10 <
b10 R
b10000 *
b10000 _
b10000 V
b1100011 +
b1100011 7
b1100011 ^
1G
0M
b10000 W
b101100 ,
b101100 4
b101100 A
b100000 I
b10000 T
b1100100 '
b1100100 ;
b1100100 `
b110 a
b11111111111111111000000000100000 .
b11111111111111111000000000100000 Y
b110011011000000000100000 -
b110011011000000000100000 E
b1010 D
b100000000 t
b101000 1
b101000 5
b101000 >
1"
#100
0"
#105
16
b110 0
b110 <
b110 R
b10001 *
b10001 _
b11111111111111111111111000000000 +
b11111111111111111111111000000000 7
b11111111111111111111111000000000 ^
b10001 V
b11111111 2
b11111111 :
b11111111 Z
0G
1J
b10001 W
b11111111 [
b110000 ,
b110000 4
b110000 A
b100111 I
b111 U
b10001 T
b11111111 &
b11111111 ]
b11111111 b
b111 c
b100000000 '
b100000000 ;
b100000000 `
b1111 a
b11111111111111111000100000100111 .
b11111111111111111000100000100111 Y
b1111001111000100000100111 -
b1111001111000100000100111 E
b1011 D
b101100 1
b101100 5
b101100 >
b1100011 u
1"
#110
0"
#115
0!
16
1)
b11111111111111111111111100000000 +
b11111111111111111111111100000000 7
b11111111111111111111111100000000 ^
b10 0
b10 <
b10 R
b10010 *
b10010 _
b10010 V
b100000000 2
b100000000 :
b100000000 Z
1G
0J
b10010 W
b100000000 [
b110100 ,
b110100 4
b110100 A
b100000 I
b1111 U
b10010 T
b100000000 &
b100000000 ]
b100000000 b
b1111 c
b11111111111111111111111000000000 '
b11111111111111111111111000000000 ;
b11111111111111111111111000000000 `
b10001 a
b11111111111111111001000000100000 .
b11111111111111111001000000100000 Y
b10001011111001000000100000 -
b10001011111001000000100000 E
b1100 D
b11111111111111111111111000000000 v
b110000 1
b110000 5
b110000 >
1"
#120
0"
#125
1!
0)
19
b0 0
b0 <
b0 R
06
b0 *
b0 _
b0 +
b0 7
b0 ^
b0 V
b0 2
b0 :
b0 Z
0G
b0 W
b0 [
b111000 ,
b111000 4
b111000 A
b0 I
b0 U
b0 T
b0 &
b0 ]
b0 b
b0 c
b0 '
b0 ;
b0 `
b0 a
b0 .
b0 Y
b0 -
b0 E
b1101 D
b110100 1
b110100 5
b110100 >
b11111111111111111111111100000000 w
1"
#130
b100000 %
0"
